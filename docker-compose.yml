version: '3.1'
services:
  api:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      - postgresql
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://10.128.0.5:5432/postgres
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=password
      - SPRING_JPA_HIBERNATE_DDL_AUTO=create
    networks:
      - mynet

  api2:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8082:8080"
    depends_on:
      - postgresql
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://PostgreSQL:5432/postgres
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=password
      - SPRING_JPA_HIBERNATE_DDL_AUTO=create
    networks:
      - mynet

  postgresql:
    image: postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_PASSWORD=password
      - POSTGRES_USER=postgres
      - POSTGRES_DB=postgres
    networks:
      - mynet

  phppgadmin:
    image: bitnami/phppgadmin
    ports:
      - '8081:8080'
      - '443:8443'
    depends_on:
      - postgresql
    networks:
      - mynet

  client:
    stdin_open: true
    ports:
      - "80:80"
    environment:
      - CHOKIDAR_USEPOLLING=true
    build:
      context: ./frontend
      dockerfile: Dockerfile
    volumes:
      - /app/node_modules
      - ./frontend:/app
    depends_on:
      - api
      - api2
    networks:
      - mynet

networks:
  mynet:
    driver: bridge
